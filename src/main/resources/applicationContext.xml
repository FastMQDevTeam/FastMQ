<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <context:component-scan base-package="MQ"/>

    <!--注入启动的消息服务服务器-->
    <bean id="mqService" class="MQ.MQService">
        <constructor-arg index="0" type="java.lang.String">
            <value>tcp://localhost:8888</value>
        </constructor-arg>
    </bean>

    <!--注入zmq用来进行参数的注入-->
    <bean id="zmq" class="org.zeromq.ZMQ"></bean>

    <bean id="brokerPullSingleton" class="MQ.BrokerPullSingleton">
        <constructor-arg index="0">
            <value>tcp://localhost:8889</value>
        </constructor-arg>
        <constructor-arg index="1">
            <value>tcp://localhost:8888</value>
        </constructor-arg>
    </bean>

    <bean id="setupFastMQ" class="MQ.Cluster.SetupFastMQ">
        <constructor-arg index="0">
            <value>tcp://localhost:8000</value>
        </constructor-arg>
    </bean>

    <!-- 引入jdbc配置文件 -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:properties/*.properties</value>
                <!--要是有多个配置文件，只需在这里继续添加即可 -->
            </list>
        </property>
    </bean>



    <bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
        <property name="poolName" value="springHikariCP" />
        <property name="connectionTestQuery" value="SELECT 1" />
        <property name="dataSourceClassName" value="${dataSourceClassName}" />
        <property name="maximumPoolSize" value="${hikari.maximumPoolSize}" />
        <property name="idleTimeout" value="${hikari.idleTimeout}" />

        <property name="dataSourceProperties">
            <props>
                <prop key="url">${dataSource.url}</prop>
                <prop key="user">${dataSource.username}</prop>
                <prop key="password">${dataSource.password}</prop>
            </props>
        </property>
    </bean>

    <!-- HikariCP configuration -->
    <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
        <constructor-arg ref="hikariConfig"/>
    </bean>

    <!--JdbcTemplate 内部使用DataSourceUtils进行连接的事务上下文获取-->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--利用spring的事务管理，添加事务管理-->
    <bean id="TransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <tx:annotation-driven proxy-target-class="true" transaction-manager="TransactionManager" />

    <!--注入redis客户端连接池-->
    <bean id="lettuceConnectionFactory"
          class="org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory"
          p:hostName="redisServer" p:port="6379"/>
    <bean id="redisTemplate"
          class="org.springframework.data.redis.core.RedisTemplate"
          p:connectionFactory-ref="lettuceConnectionFactory"/>
</beans>